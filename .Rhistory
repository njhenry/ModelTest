library(foreach)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
library(foreach)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
library(foreach)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
library(foreach)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
library(foreach)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
source('~/circularkern.R')
source('~/circularkern.R')
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:1000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:10000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:10000) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
source('~/circularkern.R')
source('~/circularkern.R')
source('~/circularkern.R')
source('~/circularkern.R')
source('~/ModelTest/inc_DAG.R')
source('~/ModelTest/inc_DAG.R')
source('~/ModelTest/inc_DAG.R')
source('~/ModelTest/inc_DAG.R')
setwd("C:/Users/scro3122/Documents")
library(dplyr)
library(ggplot2)
inc <- read.csv("indi.data.for.treatmentseeking.final.csv")
years <- select(inc, year)[[1]]
hist(years)
print(table(years))
inc2015 <- filter(inc, year == 2015)
country2015 <- select(inc2015, Country)
print(table(country2015))
print(sum(select(filter(inc2015, Country == "Nigeria"), rdt.result)[[1]]))
print(sum(select(filter(inc2015, Country == "Mali"), rdt.result)[[1]]))
print(sum(select(filter(inc2015, Country == "Rwanda"), rdt.result)[[1]]))
print(sum(select(filter(inc2015, Country == "Kenya"), rdt.result)[[1]]))
print(table(select(filter(inc2015, Country == "Mali"), urb.rural)))
##do Mali in 2015
mali15 <- filter(inc2015, Country == "Mali")
locs <- cbind(mali15$LONG, mali15$LAT)
plot(locs)
source("getCovs.R")
#temporal covs
startpathsT <- list("Z:/mastergrids/MODIS_Global/MOD11A2_LST/LST_Day/1km/Monthly/LST_Day.",
"Z:/mastergrids/Other_Global_Covariates/TemperatureSuitability/TSI_Pf_Dynamic/1km/Monthly/TSI-Martens2-Pf."
)
endpathsT <- list(".Mean.1km.Data.tif",
".Data.1km.Data.tif")
tempCovs <- getTempCovsMonth(locs[,2:1], year, mali15$month, startpathsT, endpathsT, list("LST", "TempSuit"))
#static covs
covpaths <- list("Z:/mastergrids/Other_Global_Covariates/UrbanAreas/Global_Urban_Footprint/From_12m/1km/Global_Urban_Footprint_1km_12m-Prop-Urban-Unclipped.tif")
staticCovs <- getStaticCovs(locs[,2:1], covpaths, covnames=list("Urban"))
df <- data.frame(x=locs[,1], y=locs[,2], LST=tempCovs$LST, month=as.numeric(mali15$month) < 10, TempSuit=tempCovs$TempSuit,
urban=staticCovs$Urban)
p <- ggplot(df, aes(x=x,y=y,color=LST)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=TempSuit)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=month)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=urban)) + geom_point()
print(p)
fullpath <- "Z:/mastergrids/MODIS_Global/MOD11A2_LST/LST_Day/1km/Monthly/LST_Day.2015.09.Mean.1km.Data.tif"
r <- crop(raster(fullpath), extent(c(-12.5, -2.5, 10, 16)))
r2 <- crop(raster(covpaths[[1]]), extent(c(-12.5, -2.5, 10, 16)))
plot(r)
sum(is.na(values(r)))
library(FSIC)
pr <- gpReg(c(locs, month), mali15$rdt.result)
temp <- gpReg(c(locs, month), tempCovs$LST)
ts <- gpReg(c(locs, month), tempCovs$TempSuit)
plot(temp, pr)
plot(ts, pr)
years <- select(inc, year)[[1]]
?read.csv
source('~/ModelTest/inc_DAG.R')
source('~/ModelTest/inc_DAG.R')
source('~/ModelTest/inc_DAG.R')
setwd("C:/Users/scro3122/Documents")
library(dplyr)
library(ggplot2)
inc <- read.csv("indi.data.for.treatmentseeking.final.csv")
years <- select(inc, year)[[1]]
source('~/ModelTest/inc_DAG.R')
source('~/ModelTest/inc_DAG.R')
years <- select(inc, year)
years <- select(inc, year)
years <- select(inc, year)[[1]]
years <- select(inc, year)[[1]]
years <- select(inc, year)[[1]]
years <- select(inc, year)[[1]]
?raster
?unload
detach
detach("raster")
detach("raster", TRUE)
detach(raster, TRUE)
setwd("C:/Users/scro3122/Documents")
library(dplyr)
library(ggplot2)
inc <- read.csv("indi.data.for.treatmentseeking.final.csv")
years <- select(inc, year)[[1]]
library(raster)
years <- select(inc, year)[[1]]
select
source('~/ModelTest/inc_DAG.R')
source('~/ModelTest/inc_DAG.R')
source('~/ModelTest/inc_DAG.R')
setwd("C:/Users/scro3122/Documents")
library(dplyr)
library(ggplot2)
inc <- read.csv("indi.data.for.treatmentseeking.final.csv")
years <- dplyr::select(inc, year)[[1]]
hist(years)
print(table(years))
inc2015 <- filter(inc, year == 2015)
country2015 <- dplyr::select(inc2015, Country)
print(table(country2015))
print(sum(dplyr::select(filter(inc2015, Country == "Nigeria"), rdt.result)[[1]]))
print(sum(dplyr::select(filter(inc2015, Country == "Mali"), rdt.result)[[1]]))
print(sum(dplyr::select(filter(inc2015, Country == "Rwanda"), rdt.result)[[1]]))
print(sum(dplyr::select(filter(inc2015, Country == "Kenya"), rdt.result)[[1]]))
print(table(dplyr::select(filter(inc2015, Country == "Mali"), urb.rural)))
##do Mali in 2015
mali15 <- filter(inc2015, Country == "Mali")
locs <- cbind(mali15$LONG, mali15$LAT)
plot(locs)
source("getCovs.R")
#temporal covs
startpathsT <- list("Z:/mastergrids/MODIS_Global/MOD11A2_LST/LST_Day/1km/Monthly/LST_Day.",
"Z:/mastergrids/Other_Global_Covariates/TemperatureSuitability/TSI_Pf_Dynamic/1km/Monthly/TSI-Martens2-Pf."
)
endpathsT <- list(".Mean.1km.Data.tif",
".Data.1km.Data.tif")
tempCovs <- getTempCovsMonth(locs[,2:1], year, mali15$month, startpathsT, endpathsT, list("LST", "TempSuit"))
#static covs
covpaths <- list("Z:/mastergrids/Other_Global_Covariates/UrbanAreas/Global_Urban_Footprint/From_12m/1km/Global_Urban_Footprint_1km_12m-Prop-Urban-Unclipped.tif")
staticCovs <- getStaticCovs(locs[,2:1], covpaths, covnames=list("Urban"))
df <- data.frame(x=locs[,1], y=locs[,2], LST=tempCovs$LST, month=as.numeric(mali15$month) < 10, TempSuit=tempCovs$TempSuit,
urban=staticCovs$Urban)
p <- ggplot(df, aes(x=x,y=y,color=LST)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=TempSuit)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=month)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=urban)) + geom_point()
print(p)
fullpath <- "Z:/mastergrids/MODIS_Global/MOD11A2_LST/LST_Day/1km/Monthly/LST_Day.2015.09.Mean.1km.Data.tif"
r <- crop(raster(fullpath), extent(c(-12.5, -2.5, 10, 16)))
r2 <- crop(raster(covpaths[[1]]), extent(c(-12.5, -2.5, 10, 16)))
plot(r)
sum(is.na(values(r)))
library(FSIC)
pr <- gpReg(c(locs, month), mali15$rdt.result)
temp <- gpReg(c(locs, month), tempCovs$LST)
ts <- gpReg(c(locs, month), tempCovs$TempSuit)
plot(temp, pr)
plot(ts, pr)
source('~/ModelTest/inc_DAG.R')
setwd("C:/Users/scro3122/Documents")
library(dplyr)
library(ggplot2)
inc <- read.csv("indi.data.for.treatmentseeking.final.csv")
years <- dplyr::select(inc, year)[[1]]
hist(years)
print(table(years))
inc2015 <- filter(inc, year == 2015)
country2015 <- dplyr::select(inc2015, Country)
print(table(country2015))
print(sum(dplyr::select(filter(inc2015, Country == "Nigeria"), rdt.result)[[1]]))
print(sum(dplyr::select(filter(inc2015, Country == "Mali"), rdt.result)[[1]]))
print(sum(dplyr::select(filter(inc2015, Country == "Rwanda"), rdt.result)[[1]]))
print(sum(dplyr::select(filter(inc2015, Country == "Kenya"), rdt.result)[[1]]))
print(table(dplyr::select(filter(inc2015, Country == "Mali"), urb.rural)))
##do Mali in 2015
mali15 <- filter(inc2015, Country == "Mali")
locs <- cbind(mali15$LONG, mali15$LAT)
plot(locs)
source("getCovs.R")
#temporal covs
startpathsT <- list("Z:/mastergrids/MODIS_Global/MOD11A2_LST/LST_Day/1km/Monthly/LST_Day.",
"Z:/mastergrids/Other_Global_Covariates/TemperatureSuitability/TSI_Pf_Dynamic/1km/Monthly/TSI-Martens2-Pf."
)
endpathsT <- list(".Mean.1km.Data.tif",
".Data.1km.Data.tif")
tempCovs <- getTempCovsMonth(locs[,2:1], years, mali15$month, startpathsT, endpathsT, list("LST", "TempSuit"))
#static covs
covpaths <- list("Z:/mastergrids/Other_Global_Covariates/UrbanAreas/Global_Urban_Footprint/From_12m/1km/Global_Urban_Footprint_1km_12m-Prop-Urban-Unclipped.tif")
staticCovs <- getStaticCovs(locs[,2:1], covpaths, covnames=list("Urban"))
df <- data.frame(x=locs[,1], y=locs[,2], LST=tempCovs$LST, month=as.numeric(mali15$month) < 10, TempSuit=tempCovs$TempSuit,
urban=staticCovs$Urban)
p <- ggplot(df, aes(x=x,y=y,color=LST)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=TempSuit)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=month)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=urban)) + geom_point()
print(p)
fullpath <- "Z:/mastergrids/MODIS_Global/MOD11A2_LST/LST_Day/1km/Monthly/LST_Day.2015.09.Mean.1km.Data.tif"
r <- crop(raster(fullpath), extent(c(-12.5, -2.5, 10, 16)))
r2 <- crop(raster(covpaths[[1]]), extent(c(-12.5, -2.5, 10, 16)))
plot(r)
sum(is.na(values(r)))
library(FSIC)
pr <- gpReg(c(locs, month), mali15$rdt.result)
temp <- gpReg(c(locs, month), tempCovs$LST)
ts <- gpReg(c(locs, month), tempCovs$TempSuit)
plot(temp, pr)
plot(ts, pr)
source('~/ModelTest/inc_DAG.R')
source('~/ModelTest/inc_DAG.R')
plot(temp, mali15$month)
plot(mali15$month, temp)
plot(mali15$month, tempCovs$LST)
p <- ggplot(df, aes(x=x,y=y,color=LST)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=temp)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y)) + geom_point(color=temp + tempCovs$TempSuit)
print(p)
df <- data.frame(x=locs[,1], y=locs[,2], smoothtemp = temp + tempCovs$LST)
p <- ggplot(df, aes(x=x,y=y, color=smoothtemp)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=LST)) + geom_point()
print(p)
df <- data.frame(x=locs[,1], y=locs[,2], LST=tempCovs$LST, month=as.numeric(mali15$month) < 10, TempSuit=tempCovs$TempSuit,
urban=staticCovs$Urban)
p <- ggplot(df, aes(x=x,y=y,color=LST)) + geom_point()
print(p)
df <- data.frame(x=locs[,1], y=locs[,2], smoothtemp = temp + tempCovs$LST)
p <- ggplot(df, aes(x=x,y=y, color=smoothtemp)) + geom_point()
print(p)
df <- data.frame(x=locs[,1], y=locs[,2], stmp = temp + tempCovs$LST)
p <- ggplot(df, aes(x=x,y=y, color=stmp)) + geom_point()
print(p)
df <- data.frame(x=locs[,1], y=locs[,2], LST=tempCovs$LST, month=as.numeric(mali15$month) < 10, TempSuit=tempCovs$TempSuit,
urban=staticCovs$Urban)
p <- ggplot(df, aes(x=x,y=y,color=LST)) + geom_point()
print(p)
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
warnings()
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
rep <- sdreport(m, getJointPrecision = 1)
rep
rep$par.random
field.out <- rep$par.random
gp <- A %*% field.out
gp
source('~/ModelTest/GP_covs_test.R')
df <- data.frame(x=coord[,1], y=coord[,2], cov=cov$variable1, coeff=coeff$variable1,
response=response, pred_field=gp)
p <- ggplot(df, aes(x=x, y=y, color=pred_field)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
df <- data.frame(x=coord[,1], y=coord[,2], cov=cov$variable1, coeff=coeff$variable1,
response=response, pred_field=gp)
df <- data.frame(x=coord[,1], y=coord[,2], cov=cov$variable1, coeff=coeff$variable1,
response=response, pred_field=as.vector(gp))
p <- ggplot(df, aes(x=x, y=y, color=pred_field)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=coeff)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=coeff - pred_field)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=coeff)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
?sample.int
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
pred
setwd("C:/Users/scro3122/Documents/ModelTest")
library(INLA)
library(TMB)
library(RandomFields)
library(ggplot2)
M <- 1000
coord <- cbind(runif(M), runif(M))
N <- 100
hold.out <- sample.int(M, N)
a <- RMmatern(0.5)
cov <- RFsimulate(a, x=coord[,1], y=coord[,2])
a2 <- RMmatern(0.5)
coeff <- RFsimulate(a2, x=coord[,1], y=coord[,2])
response <- coeff$variable1 * cov$variable1 + rnorm(M, sd = 0.01)
df <- data.frame(x=coord[,1], y=coord[,2], cov=cov$variable1, coeff=coeff$variable1, response=response)
p <- ggplot(df, aes(x=x, y=y, color=cov)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=coeff)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=response)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
mesh <- inla.mesh.2d(loc = coord, cutoff = 0.1, max.n = 500)
plot(mesh)
spde <- (inla.spde2.matern(mesh=mesh, alpha=2)$param.inla)[c("M0","M1","M2")]
A <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord[-hold.out, ]))
A_hold <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord[hold.out, ]))
n_s <- nrow(spde$M0)
compile("GP_covs_test.cpp")
dyn.load(dynlib("GP_covs_test"))
m <- MakeADFun(
data = list(response=response[-hold.out], spde=spde, cov=cov$variable1[-hold.out], A=A),
parameters = list(gp=runif(n_s, 0, 10), log_kappa=2.5, log_tau=0.0,
sigma=1.00),
random = "gp",
DLL = "GP_covs_test"
)
fit.new <- nlminb(m$par,m$fn,m$gr,
control=list(iter.max=300,eval.max=300))
print(fit.new)
rep <- sdreport(m, getJointPrecision = 1)
field.out <- rep$par.random
gp <- A_hold %*% field.out
pred <- gp * cov[hold.out]
#
# df <- data.frame(x=coord[,1], y=coord[,2], cov=cov$variable1, coeff=coeff$variable1,
#                  response=response, pred_field=as.vector(gp))
#
# p <- ggplot(df, aes(x=x, y=y, color=pred_field)) + geom_point() +
#   scale_colour_gradientn(colours = terrain.colors(10))
# print(p)
#
#
# p <- ggplot(df, aes(x=x, y=y, color=coeff)) + geom_point() +
#   scale_colour_gradientn(colours = terrain.colors(10))
# print(p)
gp
pred <- as.vector(gp) * cov[hold.out]
cov
pred <- as.vector(gp) * cov$variable1[hold.out]
pred
plot(pred, response[hold.out)
plot(pred, response[hold.out])
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
