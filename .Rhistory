}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
library(foreach)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:100) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
library(foreach)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:100) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
library(foreach)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:100) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
library(foreach)
testx <- runif(1, 0, pi)
hists <- foreach(i=1:100) %do% {
ws <- sample(x, N, replace=TRUE, prob=y)
s <- 2*pi*(1/(N-1)) * sum(cos(ws * testx))/10
s
}
print(exp(-testx^0.5))
hists <- unlist(hists)
print(mean(hists))
hist(hists)
source('~/ModelTest/GP_covs_test.R')
fit.new
source('~/ModelTest/GP_covs_test.R')
length(cov$variable1)
length(coord[, 1])
length(coord[, 2])
setwd("C:/Users/scro3122/Documents/ModelTest")
library(INLA)
library(TMB)
library(RandomFields)
library(ggplot2)
M <- 1000
coord <- cbind(runif(M), runif(M))
N <- 950
hold.out <- sample.int(M, N)
a <- RMmatern(0.5)
cov <- RFsimulate(a, x=coord[,1], y=coord[,2])
a2 <- RMmatern(0.5)
coeff <- RFsimulate(a2, x=coord[,1], y=coord[,2])
response <- coeff$variable1 * cov$variable1 + rnorm(M, sd = 0.01)
df <- data.frame(x=coord[,1], y=coord[,2], cov=cov$variable1, coeff=coeff$variable1, response=response)
p <- ggplot(df, aes(x=x, y=y, color=cov)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=coeff)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=response)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
mesh <- inla.mesh.2d(loc = coord, cutoff = 0.1, max.n = 500)
plot(mesh)
spde <- (inla.spde2.matern(mesh=mesh, alpha=2)$param.inla)[c("M0","M1","M2")]
A <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord[-hold.out, ]))
A_hold <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord[hold.out, ]))
n_s <- nrow(spde$M0)
compile("GP_covs_test.cpp")
dyn.load(dynlib("GP_covs_test"))
m <- MakeADFun(
data = list(response=response[-hold.out], spde=spde, cov=cov$variable1[-hold.out], A=A),
parameters = list(gp=runif(n_s, 0, 10), log_kappa=2.5, log_tau=0.0,
sigma=1.00),
random = "gp",
DLL = "GP_covs_test"
)
fit.new <- nlminb(m$par,m$fn,m$gr,
control=list(iter.max=300,eval.max=300))
print(fit.new)
rep <- sdreport(m, getJointPrecision = 1)
field.out <- rep$par.random
gp <- A_hold %*% field.out
pred <- as.vector(gp) * cov$variable1[hold.out]
plot(pred, response[hold.out])
df.used <- data.frame(x=coord[-hold.out,1], y=coord[-hold.out,2],
cov=cov$variable1[-hold.out], coeff=coeff$variable1[-hold.out], response=response[-hold.out])
p <- ggplot(df.used, aes(x=x, y=y, color=response)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
df <- data.frame(x=coord[,1], y=coord[,2], cov=cov$variable1, coeff=coeff$variable1,
response=response, pred_field=as.vector(gp))
p <- ggplot(df, aes(x=x, y=y, color=pred_field)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=coeff)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
setwd("C:/Users/scro3122/Documents/ModelTest")
library(INLA)
library(TMB)
library(RandomFields)
library(ggplot2)
M <- 1000
coord <- cbind(runif(M), runif(M))
N <- 800
hold.out <- sample.int(M, N)
a <- RMmatern(0.5)
cov <- RFsimulate(a, x=coord[,1], y=coord[,2])
cov2 <- RFsimulate(a, x=coord[,1], y=coord[,2])
a2 <- RMmatern(0.5)
coeff <- RFsimulate(a2, x=coord[,1], y=coord[,2])
response <- coeff$variable1 * cov$variable1 + rnorm(M, sd = 0.01)
df <- data.frame(x=coord[,1], y=coord[,2], cov=cov$variable1, coeff=coeff$variable1, response=response)
p <- ggplot(df, aes(x=x, y=y, color=cov)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=coeff)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=response)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
mesh <- inla.mesh.2d(loc = coord, cutoff = 0.1, max.n = 500)
plot(mesh)
spde <- (inla.spde2.matern(mesh=mesh, alpha=2)$param.inla)[c("M0","M1","M2")]
A <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord[-hold.out, ]))
A_hold <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord[hold.out, ]))
A_all <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord))
n_s <- nrow(spde$M0)
compile("GP_covs_test.cpp")
dyn.load(dynlib("GP_covs_test"))
m <- MakeADFun(
data = list(response=response[-hold.out], spde=spde, cov=cov$variable1[-hold.out],
cov_2=cov2$variable1[-hold.out], A=A),
parameters = list(gp=runif(n_s, 0, 10), gp_2=runif(n_s, 0, 10), log_kappa=2.5, log_tau=0.0,
sigma=1.00),
random = "gp",
DLL = "GP_covs_test"
)
fit.new <- nlminb(m$par,m$fn,m$gr,
control=list(iter.max=300,eval.max=300))
print(fit.new)
rep <- sdreport(m, getJointPrecision = 1)
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
field.out
setwd("C:/Users/scro3122/Documents/ModelTest")
library(INLA)
library(TMB)
library(RandomFields)
library(ggplot2)
M <- 1000
coord <- cbind(runif(M), runif(M))
N <- 800
hold.out <- sample.int(M, N)
a <- RMmatern(0.5)
cov <- RFsimulate(a, x=coord[,1], y=coord[,2])
cov2 <- RFsimulate(a, x=coord[,1], y=coord[,2])
a2 <- RMmatern(0.5)
coeff <- RFsimulate(a2, x=coord[,1], y=coord[,2])
response <- coeff$variable1 * cov$variable1 + rnorm(M, sd = 0.01)
df <- data.frame(x=coord[,1], y=coord[,2], cov=cov$variable1, coeff=coeff$variable1, response=response)
p <- ggplot(df, aes(x=x, y=y, color=cov)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=coeff)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=response)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
mesh <- inla.mesh.2d(loc = coord, cutoff = 0.1, max.n = 500)
plot(mesh)
spde <- (inla.spde2.matern(mesh=mesh, alpha=2)$param.inla)[c("M0","M1","M2")]
A <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord[-hold.out, ]))
A_hold <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord[hold.out, ]))
A_all <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord))
n_s <- nrow(spde$M0)
compile("GP_covs_test.cpp")
dyn.load(dynlib("GP_covs_test"))
m <- MakeADFun(
data = list(response=response[-hold.out], spde=spde, spde_2=spde, cov=cov$variable1[-hold.out],
cov_2=cov2$variable1[-hold.out], A=A),
parameters = list(gp=runif(n_s, 0, 10),  log_kappa=2.5, log_tau=0.0,
gp_2=runif(n_s, 0, 10), log_kappa_2=2.5, log_tau_2=0.0,
sigma=1.00),
random = c("gp", "gp_2"),
DLL = "GP_covs_test"
)
fit.new <- nlminb(m$par,m$fn,m$gr,
control=list(iter.max=300,eval.max=300))
print(fit.new)
rep <- sdreport(m, getJointPrecision = 1)
rep$par.random
setwd("C:/Users/scro3122/Documents/ModelTest")
library(INLA)
library(TMB)
library(RandomFields)
library(ggplot2)
M <- 1000
coord <- cbind(runif(M), runif(M))
N <- 800
hold.out <- sample.int(M, N)
a <- RMmatern(0.5)
cov <- RFsimulate(a, x=coord[,1], y=coord[,2])
cov2 <- RFsimulate(a, x=coord[,1], y=coord[,2])
a2 <- RMmatern(0.5)
coeff <- RFsimulate(a2, x=coord[,1], y=coord[,2])
response <- coeff$variable1 * cov$variable1 + rnorm(M, sd = 0.01)
df <- data.frame(x=coord[,1], y=coord[,2], cov=cov$variable1, coeff=coeff$variable1, response=response)
p <- ggplot(df, aes(x=x, y=y, color=cov)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=coeff)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
p <- ggplot(df, aes(x=x, y=y, color=response)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(p)
mesh <- inla.mesh.2d(loc = coord, cutoff = 0.1, max.n = 500)
plot(mesh)
spde <- (inla.spde2.matern(mesh=mesh, alpha=2)$param.inla)[c("M0","M1","M2")]
A <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord[-hold.out, ]))
A_hold <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord[hold.out, ]))
A_all <- inla.spde.make.A(mesh=mesh, loc=as.matrix(coord))
n_s <- nrow(spde$M0)
compile("GP_covs_test.cpp")
dyn.load(dynlib("GP_covs_test"))
m <- MakeADFun(
data = list(response=response[-hold.out], spde=spde, spde_2=spde, cov=cov$variable1[-hold.out],
cov_2=cov2$variable1[-hold.out], A=A),
parameters = list(gp=runif(n_s, 0, 10),  log_kappa=2.5, log_tau=0.0,
gp_2=runif(n_s, 0, 10), log_kappa_2=2.5, log_tau_2=0.0,
sigma=1.00),
random = c("gp", "gp_2"),
DLL = "GP_covs_test"
)
fit.new <- nlminb(m$par,m$fn,m$gr,
control=list(iter.max=300,eval.max=300))
print(fit.new)
rep <- sdreport(m, getJointPrecision = 1)
field.out <- rep$par.random[1:n_s]
field.out_2 <- rep$par.random[n_s + (1:n_s)]
gp <- A_hold %*% field.out
gp_2 <- A_hold %*% field.out_2
pred <- as.vector(gp) * cov$variable1[hold.out] + as.vector(gp_2) * cov_2$variable1[hold.out]
plot(pred, response[hold.out])
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
response[-hold.out]
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
mean(field.out)
mean(field.out_2
)
mesh
mesh$loc
field.df <- data.frame(x=mesh$loc[,1], y=mesh$loc[,2], field1=field.out, field2=field.out2)
field.df <- data.frame(x=mesh$loc[,1], y=mesh$loc[,2], field1=field.out, field2=field.out_2)
field.plot1 <- ggplot(field.df, aes(x=x,y=y,color=field1)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
field.plot2 <- ggplot(field.df, aes(x=x,y=y,color=field2)) + geom_point() +
scale_colour_gradientn(colours = terrain.colors(10))
print(field.plot1)
print(field.plot2)
View(spde)
rep(c("1", "2"), c(10, 5))
source('~/ModelTest/GP_covs_test.R')
###held out points
df.ho <- data.frame(x=c(coord[-hold.out, 1], coord[hold.out, 1]), y=c(coord[-hold.out, 2], coord[hold.out, 2]),
held.out <- rep(c(FALSE, TRUE), M-N, N))
ho <- ggplot(df.ho, aes(x=x,y=y,color=held.out)) + geom_point()
print(ho)
###held out points
df.ho <- data.frame(x=c(coord[-hold.out, 1], coord[hold.out, 1]), y=c(coord[-hold.out, 2], coord[hold.out, 2]),
held.out=rep(c(FALSE, TRUE), M-N, N))
ho <- ggplot(df.ho, aes(x=x,y=y,color=held.out)) + geom_point()
print(ho)
M-N
N
rep(c(FALSE, TRUE), M-N, N)
###held out points
df.ho <- data.frame(x=c(coord[-hold.out, 1], coord[hold.out, 1]), y=c(coord[-hold.out, 2], coord[hold.out, 2]),
held.out=rep(c(FALSE, TRUE), c(M-N, N)))
ho <- ggplot(df.ho, aes(x=x,y=y,color=held.out)) + geom_point()
print(ho)
source('~/ModelTest/GP_covs_test.R')
plot(pred, response[hold.out])
abline(a=0, b=1)
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/ModelTest/GP_covs_test.R')
source('~/inc_DAG.R')
source('~/inc_DAG.R')
source('~/inc_DAG.R')
source('~/inc_DAG.R')
source('~/inc_DAG.R')
setwd("C:/Users/scro3122/Documents")
library(dplyr)
library(ggplot2)
inc <- read.csv("indi.data.for.treatmentseeking.final.csv")
years <- dplyr::select(inc, year)[[1]]
hist(years)
print(table(years))
inc2015 <- dplyr::filter(inc, year == 2015)
country2015 <- dplyr::select(inc2015, Country)
print(table(country2015))
print(sum(dplyr::select(filter(inc2015, Country == "Nigeria"), rdt.result)[[1]]))
print(sum(dplyr::select(filter(inc2015, Country == "Mali"), rdt.result)[[1]]))
print(sum(dplyr::select(filter(inc2015, Country == "Rwanda"), rdt.result)[[1]]))
print(sum(dplyr::select(filter(inc2015, Country == "Kenya"), rdt.result)[[1]]))
print(table(dplyr::select(filter(inc2015, Country == "Mali"), urb.rural)))
##do Mali in 2015
mali15 <- dplyr::filter(inc2015, Country == "Mali")
locs <- cbind(mali15$LONG, mali15$LAT)
plot(locs)
source("getCovs.R")
#temporal covs
startpathsT <- list("Z:/mastergrids/MODIS_Global/MOD11A2_LST/LST_Day/1km/Monthly/LST_Day.",
"Z:/mastergrids/Other_Global_Covariates/TemperatureSuitability/TSI_Pf_Dynamic/1km/Monthly/TSI-Martens2-Pf."
)
endpathsT <- list(".Mean.1km.Data.tif",
".Data.1km.Data.tif")
tempCovs <- getTempCovsMonth(locs[,2:1], mali15$year, mali15$month, startpathsT, endpathsT, list("LST", "TempSuit"))
#static covs
covpaths <- list("Z:/mastergrids/Other_Global_Covariates/UrbanAreas/Global_Urban_Footprint/From_12m/1km/Global_Urban_Footprint_1km_12m-Prop-Urban-Unclipped.tif")
staticCovs <- getStaticCovs(locs[,2:1], covpaths, covnames=list("Urban"))
df <- data.frame(x=locs[,1], y=locs[,2], LST=tempCovs$LST, month=as.numeric(mali15$month) < 10, TempSuit=tempCovs$TempSuit,
urban=staticCovs$Urban)
p <- ggplot(df, aes(x=x,y=y,color=LST)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=TempSuit)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=month)) + geom_point()
print(p)
p <- ggplot(df, aes(x=x,y=y,color=urban)) + geom_point()
print(p)
fullpath <- "Z:/mastergrids/MODIS_Global/MOD11A2_LST/LST_Day/1km/Monthly/LST_Day.2015.09.Mean.1km.Data.tif"
r <- crop(raster(fullpath), extent(c(-12.5, -2.5, 10, 16)))
r2 <- crop(raster(covpaths[[1]]), extent(c(-12.5, -2.5, 10, 16)))
plot(r)
sum(is.na(values(r)))
library(FSIC)
pr <- gpReg(c(locs, month), mali15$rdt.result)
temp <- gpReg(c(locs, month), tempCovs$LST)
ts <- gpReg(c(locs, month), tempCovs$TempSuit)
plot(temp, pr)
plot(ts, pr)
tempCovs <- getTempCovsMonth(locs[,2:1], mali15$year, mali15$month, startpathsT, endpathsT, list("LST", "TempSuit"))
source('~/inc_DAG.R')
source('~/inc_DAG.R')
source('~/inc_DAG.R')
source('~/inc_DAG.R')
source('~/inc_DAG.R')
tempCovs$rainfall
f <- function(x, y=runif(length(x))){
x+y
}
f(c(1,2))
source('~/inc_DAG.R')
source('~/inc_DAG.R')
plot(tempCovs$rainfall, tempCovs$`rainfall-1`)
plot(tempCovs$rainfall, tempCovs$`rainfall-2`)
source('~/inc_DAG.R')
plot(tempCovs$rainfall, tempCovs$`rainfall-1`)
plot(tempCovs$rainfall, tempCovs$`rainfall-2`)
tempCovs$rainfall - tempCovs$`rainfall-1`
source('~/inc_DAG.R')
plot(tempCovs$rainfall, tempCovs$`rainfall-2`)
tempCovs$rainfall - tempCovs$`rainfall-1`
source('~/inc_DAG.R')
source('~/inc_DAG.R')
plot(tempCovs$rainfall, tempCovs$`rainfall-2`)
tempCovs$rainfall - tempCovs$`rainfall-1`
source('~/inc_DAG.R')
tempCovs$rainfall - tempCovs$`rainfall-1`
plot(tempCovs$rainfall, tempCovs$`rainfall-2`)
tempCovs <- getTempCovsMonth(locs[,2:1], mali15$year, mali15$month, startpathsT, endpathsT, tempcovnames, timelags, timelags)
source('~/inc_DAG.R')
source('~/inc_DAG.R')
source('~/inc_DAG.R')
source('~/inc_DAG.R')
source('~/inc_DAG.R')
plot(tempCovs$rainfall, tempCovs$`rainfall-2`)
source('~/inc_DAG.R')
plot(tempCovs$rainfall, tempCovs$`rainfall-2`)
plot(tempCovs$rainfall, tempCovs$`rainfall-1`)
plot(tempCovs$`rainfall-1`, tempCovs$`rainfall-2`)
source('~/inc_DAG.R')
plot(tempCovs$LST, tempCovs$`LST-1`)
plot(tempCovs$LST, tempCovs$`LST-2`)
plot(tempCovs$`LST-1`, tempCovs$`LST-2`)
source('~/inc_DAG.R')
source('~/inc_DAG.R')
source('~/inc_DAG.R')
(staticCovs$Urban, mali15$rdt.result)
plot(staticCovs$Urban, mali15$rdt.result)
plot(staticCovs$Urban, pr)
plot(staticCovs$FrankenPop, pr)
cor(staticCovs$FrankenPop, pr)
cor(staticCovs$Urban, pr)
cor(staticCovs$Elevation, pr)
plot(staticCovs$Elevation, pr)
pr <- gpReg(c(locs, mali15$month), mali15$rdt.result)
temp <- gpReg(c(locs, mali15$month), tempCovs$LST)
ts <- gpReg(c(locs, mali15$month), tempCovs$TempSuit)
el <- gpReg(c(locs, mali15$month), staticCovs$Elevation)
plot(el, pr)
plot(el, Elevation)
plot(el, staticCovs$Elevation)
plot(el, Elevation)
plot(el, pr)
cor(pr, el)
source('~/ModelTest/runpc.R')
?sample.int
pc <- runpc(c(staticCovs, tempCovs), locs=locs, times=mali15$month, alpha=0.1, nSample=10)
source("runpc.R")
pc <- runpc(c(staticCovs, tempCovs), locs=locs, times=mali15$month, alpha=0.1, nSample=10)
source("runpc.R")
getwd()
setwd("C:/Users/scro3122/Documents/ModelTest/")
source('~/inc_DAG.R')
setwd("C:/Users/scro3122/Documents/ModelTest/")
source("runpc.R")
setwd("C:/Users/scro3122/Documents/ModelTest/")
pc <- runpc(c(staticCovs, tempCovs), locs=locs, times=mali15$month, alpha=0.1, nSample=10)
setwd("C:/Users/scro3122/Documents/ModelTest/")
source("runpc.R")
setwd("C:/Users/scro3122/Documents/ModelTest/")
pc <- runpc(c(staticCovs, tempCovs), locs=locs, times=mali15$month, alpha=0.1, nSample=10)
setwd("C:/Users/scro3122/Documents/ModelTest/")
source("runpc.R")
setwd("C:/Users/scro3122/Documents/ModelTest/")
pc <- runpc(c(staticCovs, tempCovs), locs=locs, times=mali15$month, alpha=0.1, nSample=10)
l <- list
l$x <- c(1,2,3)
l$'x' <- c(1,2,3)
l[["x"]] <- c(1,2,3)
l <- list()
l$x <- c(1,2,3)
l
l$"x" <- c(1,2,3)
l
y <- list()
y[[x]] <- c(2,3,4)
y[["x"]] <- c(2,3,4)
for(k in l){}
for(k in l){
print(k)
}
l1 <- list()
for(k in l){
l1[[k]] <- c(1,2)
}
for(k in l){
l1$k <- c(1,2)
}
l
l1
setwd("C:/Users/scro3122/Documents/ModelTest/")
source("runpc.R")
setwd("C:/Users/scro3122/Documents/ModelTest/")
pc <- runpc(c(staticCovs, tempCovs), locs=locs, times=mali15$month, alpha=0.1, nSample=10)
setwd("C:/Users/scro3122/Documents/ModelTest/")
source("runpc.R")
setwd("C:/Users/scro3122/Documents/ModelTest/")
pc <- runpc(c(staticCovs, tempCovs), locs=locs, times=mali15$month, alpha=0.1, nSample=100)
pc
pc[[1]]
pc[[2]]
pc <- runpc(c(staticCovs, tempCovs), locs=locs, times=mali15$month, alpha=0.1, nSample=1000)
library(igraph)
full <- graph_from_adjacency_matrix(pc[[1]])
library(igraph)
full <- graph_from_adjacency_matrix(pc[[1]])
print(full)
library(igraph)
full <- graph_from_adjacency_matrix(pc[[1]])
plot(full)
dim(locs)
pc <- runpc(c(staticCovs, tempCovs), locs=locs, times=mali15$month, alpha=0.1, nSample=2000)
library(igraph)
full <- graph_from_adjacency_matrix(pc[[1]])
plot(full)
