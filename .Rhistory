# print(proc.time() - ptm)
#
ptm <- proc.time()
M <- 100000000
x <- rep(NA, M)
for(i in 1:M){
x[i] <- i
}
print(proc.time() - ptm)
# ptm <- proc.time()
#
# M <- 100000000
# x <- c()
# for(i in 1:M){
#   x[i] <- i
# }
#
# print(proc.time() - ptm)
#
#
ptm <- proc.time()
M <- 10000
x <- rep(NA, M)
for(i in 1:M){
x[i] <- i
}
print(proc.time() - ptm)
# ptm <- proc.time()
#
# M <- 100000000
# x <- c()
# for(i in 1:M){
#   x[i] <- i
# }
#
# print(proc.time() - ptm)
#
#
ptm <- proc.time()
M <- 10000
x <- rep("NA", M)
for(i in 1:M){
x[i] <- i
}
print(proc.time() - ptm)
# ptm <- proc.time()
#
# M <- 100000000
# x <- c()
# for(i in 1:M){
#   x[i] <- i
# }
#
# print(proc.time() - ptm)
#
#
ptm <- proc.time()
M <- 100000
x <- rep("NA", M)
for(i in 1:M){
x[i] <- i
}
print(proc.time() - ptm)
# ptm <- proc.time()
#
# M <- 100000000
# x <- c()
# for(i in 1:M){
#   x[i] <- i
# }
#
# print(proc.time() - ptm)
#
#
ptm <- proc.time()
M <- 1000000
x <- rep("NA", M)
for(i in 1:M){
x[i] <- i
}
print(proc.time() - ptm)
# ptm <- proc.time()
#
# M <- 100000000
# x <- c()
# for(i in 1:M){
#   x[i] <- i
# }
#
# print(proc.time() - ptm)
#
#
ptm <- proc.time()
M <- 10000000
x <- rep("NA", M)
for(i in 1:M){
x[i] <- i
}
print(proc.time() - ptm)
# ptm <- proc.time()
#
# M <- 100000000
# x <- c()
# for(i in 1:M){
#   x[i] <- i
# }
#
# print(proc.time() - ptm)
#
#
ptm <- proc.time()
M <- 10000000
x <- rep(NA, M)
for(i in 1:M){
x[i] <- i
}
print(proc.time() - ptm)
source('~/Madagascar/static.R')
View(clean_mad_hrdata)
View(clean_mad_hrdata)
load("Madagascar/dat_files.RData")
load("Madagascar/dat_files.RData")
#save(list=c("cases_list", "covs_vec_list", "n_HFs_use"), file = "dat_files.RData")
obs_full <- c(cases_list, covs_vec_list)
N_obs <- length(obs_full)
N_pts <- length(obs_full[[1]])
locs <- cbind(rep(1, N_pts), rep(2, N_pts))
obs_times <- rep(1:12, n_HFs_use)
dim(locs)
1 == 1 == 1
1 == 1
2 = 2
2 == 2
adj_mat_list <- list()
obs_lags <- c(rep(0:2, 9))
G_0 <- matrix(1, N_obs-1, N_obs-1) - diag(N_obs-1)
G_0[1, ] <- 0
for(i in 1:(N_obs-1)){
G_0[i, obs_lags[i] < obs_lags] <- 0
}
ptm_start <- proc.time()
N_iter <- 6
alpha <- runif(1, 0.6, 0.9)
ptm <- proc.time()
pc <- runpc(covs_vec_list, locs, obs_times, alpha, G_0, nSample = 500)
print(proc.time() - ptm)
load("Madagascar/dat_files.RData")
#save(list=c("cases_list", "covs_vec_list", "n_HFs_use"), file = "dat_files.RData")
obs_full <- c(cases_list, covs_vec_list)
N_obs <- length(obs_full)
N_pts <- length(obs_full[[1]])
locs <- cbind(rep(1, N_pts), rep(2, N_pts))
obs_times <- rep(1:12, n_HFs_use)
source("ModelTest/runpc.R")
source("ModelTest/runpc_last.R")
#save.image("mad_covs.RData")
adj_mat_list <- list()
obs_lags <- c(rep(0:2, 9))
G_0 <- matrix(1, N_obs-1, N_obs-1) - diag(N_obs-1)
G_0[1, ] <- 0
for(i in 1:(N_obs-1)){
G_0[i, obs_lags[i] < obs_lags] <- 0
}
ptm_start <- proc.time()
N_iter <- 6
print(i)
alpha <- runif(1, 0.6, 0.9)
ptm <- proc.time()
pc <- runpc(covs_vec_list, locs, obs_times, alpha, G_0, nSample = 500)
print(proc.time() - ptm)
###file to implement IRS causal analysis
###Idea: run pc algorithm on environmental variables and case data
###as well as IRS data. Temporal variables will be e.g. rain in Jan
source("C:/Users/scro3122/Documents/ModelTest/getCovs.R")
###file to implement IRS causal analysis
###Idea: run pc algorithm on environmental variables and case data
###as well as IRS data. Temporal variables will be e.g. rain in Jan
source("C:/Users/scro3122/Documents/ModelTest/getCovs.R")
###file to implement IRS causal analysis
###Idea: run pc algorithm on environmental variables and case data
###as well as IRS data. Temporal variables will be e.g. rain in Jan
source("C:/Users/scro3122/Documents/ModelTest/getCovs.R")
###file to implement IRS causal analysis
###Idea: run pc algorithm on environmental variables and case data
###as well as IRS data. Temporal variables will be e.g. rain in Jan
source("C:/Users/scro3122/Documents/ModelTest/getCovs.R")
###file to implement IRS causal analysis
###Idea: run pc algorithm on environmental variables and case data
###as well as IRS data. Temporal variables will be e.g. rain in Jan
source("C:/Users/scro3122/Documents/ModelTest/getCovs.R")
###file to implement IRS causal analysis
###Idea: run pc algorithm on environmental variables and case data
###as well as IRS data. Temporal variables will be e.g. rain in Jan
source("C:/Users/scro3122/Documents/ModelTest/getCovs.R")
###file to implement IRS causal analysis
###Idea: run pc algorithm on environmental variables and case data
###as well as IRS data. Temporal variables will be e.g. rain in Jan
source("C:/Users/scro3122/Documents/ModelTest/getCovs.R")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(r)
r
source('~/.active-rstudio-document')
r <- raster("C:/Users/scro3122/Documents/CHAI/MMR update/API_mean.tif")
library(raster)
r <- raster("C:/Users/scro3122/Documents/CHAI/MMR update/API_mean.tif")
plot(r)
r <- raster("C:/Users/scro3122/Documents/CHAI/MMR update/prob_occurence_mean.tif")
plot(r)
3600*4800
source('~/Madagascar/dat.R')
load("Z:/Seasonality/Michele's documents/Madagascar/clean_mad_hrdata.RData")
library(plyr)
library(dplyr)
library(DiagrammeR)
setwd("C:/Users/scro3122/Documents/")
##HF list
HF_names <- unique(clean_mad_hrdata$hf)
n_HFs <- length(HF_names)
clean_mad_hrdata
obs_year <- clean_mad_hrdata$year
obs_month <- clean_mad_hrdata$month_no
locs <- cbind(clean_mad_hrdata$long, clean_mad_hrdata$lat)
###get monthly medians for each HF
for(i in 1:n_HFs){
HF_name <- HF_names[i]
HF_data <- filter(all_data, hf==HF_name)
for(j in 1:12){
median_matrix[j, i] <- median(filter(HF_data, month_no==j)$rdt_pos)
for(k in 1:n_covs){
median_mat_covs[[k]][j, i] <- median(filter(HF_data, month_no==j)[, k + 7])
}
}
}
relative_matrix <- apply(median_matrix, 2, function(col) col/sum(col))
load("Madagascar/dat_files.RData")
covs_vec_list
load("Z:/Seasonality/Michele's documents/Madagascar/clean_mad_hrdata.RData")
library(plyr)
library(dplyr)
library(DiagrammeR)
setwd("C:/Users/scro3122/Documents/")
##HF list
HF_names <- unique(clean_mad_hrdata$hf)
n_HFs <- length(HF_names)
#add covariates to data frame
#temporal covariates
folderpaths <- as.list(paste0(list.dirs("Z:/Madagascar_incidence/CovariateData/5km/Monthly_variables",
full.names=TRUE, recursive=FALSE), "/"))
startpaths <- list("chirps.v2.0.",
"EVI.",
"LST_Day.",
"LST_DiurnalDiff.",
"LST_Night.",
"TCB.",
"TCW.",
"TSI.",
"TSI.")
endpaths <- list(".5km.tif",
".mean.5km.mean.tif",
".mean.5km.mean.tif",
".mean.5km.mean.tif",
".mean.5km.mean.tif",
".mean.5km.mean.tif",
".mean.5km.mean.tif",
".Data.5km.Data.tif",
".Data.5km.Data.tif")
n_covs <- length(endpaths)
covnames <- list("Rain",
"EVI",
"LST_day",
"LST_dif",
"LST_night",
"TCB",
"TCW",
"TSI_pf",
"TSI_pv")
##
obs_year <- clean_mad_hrdata$year
obs_month <- clean_mad_hrdata$month_no
locs <- cbind(clean_mad_hrdata$long, clean_mad_hrdata$lat)
source("C:/Users/scro3122/Documents/CHAI/getCovsTempMonths.R")
cov_vals <- getTempCovsMonthPar(locs, obs_month, obs_year, folderpaths, startpaths, endpaths, covnames)
n_covs_all <- length(cov_vals)
#each column is a HF
median_matrix <- matrix(NA, ncol=n_HFs, nrow=12)
median_mat_covs <- list()
for(i in 1:n_covs){
median_mat_covs[[i]] <- matrix(NA, ncol=n_HFs, nrow=12)
}
#create data frame for covariates
cov_df <- data.frame(matrix(unlist(cov_vals), ncol=n_covs, byrow=F))
names(cov_df) <- covnames
all_data <- data.frame(clean_mad_hrdata, cov_df)
###get monthly medians for each HF
for(i in 1:n_HFs){
HF_name <- HF_names[i]
HF_data <- filter(all_data, hf==HF_name)
for(j in 1:12){
median_matrix[j, i] <- median(filter(HF_data, month_no==j)$rdt_pos)
for(k in 1:n_covs){
median_mat_covs[[k]][j, i] <- median(filter(HF_data, month_no==j)[, k + 7])
}
}
}
relative_matrix <- apply(median_matrix, 2, function(col) col/sum(col))
#remove columns with NAs or NANs
remove_index <- which(is.na(colSums(relative_matrix)))
relative_matrix_use <- relative_matrix[, -remove_index]
median_mat_covs_use <- lapply(median_mat_covs, function(mat) mat[, -remove_index])
HF_names_use <- HF_names[-remove_index]
n_HFs_use <- length(HF_names_use)
####timelags
time_lags <- c(1, 2)
n_tl <- length(time_lags)
mat_cov_tl <- list()
for(j in 1:n_covs){
mat_cov_tl[[1 + (j-1)*(n_tl+1)]] <- median_mat_covs_use[[j]]
for(i in 1:length(time_lags)){
#work out what permutation should be for the timelag
#weird minus 1 then plus 1 things is to get 12 mod 12 to be 12 instead of 0
perm <- (((1:12) - time_lags[i] - 1) %% 12) + 1
#print(perm)
mat_cov_tl[[1 + i + (j-1)*(n_tl+1)]] <- median_mat_covs_use[[j]][perm, ]
}
}
#goes HF1 Jan,..., HF1 Dec, HF2 Jan, ...
cases_vec <- unname(as.vector(relative_matrix_use))
covs_vec_list <- lapply(mat_cov_tl, as.vector)
#names(covs_vec_list) <- names(cov_vals)
names(covs_vec_list) <- as.vector(sapply(covnames, function(cov) paste0(cov, "-", c(0, time_lags))))
cases_list <- list(cases_vec)
names(cases_list) <- "cases"
cases_vec
relative_matrix_use
plot(relative_matrix_use[, 1])
plot(relative_matrix_use[, 2])
plot(relative_matrix_use[, 3])
plot(relative_matrix_use[, 4])
plot(relative_matrix_use[, 5])
plot(relative_matrix_use[, 6])
plot(relative_matrix_use[, 7])
plot(relative_matrix_use[, 8])
plot(relative_matrix_use[, 9])
plot(relative_matrix_use[, 10])
plot(relative_matrix_use[, 11])
plot(relative_matrix_use[, 12])
plot(relative_matrix_use[, 13])
##HF list
HF_names <- unique(clean_mad_hrdata$hf)
clean_mad_hrdata
plot(clean_mad_hrdata$rdt_pos[1:72])
plot(clean_mad_hrdata$rdt_pos[1:200])
base::mean()
r5 <- raster("Z:/andrep/Guatemala2/Outputs_real/2015/API_median.tif")
library(raster)
r5 <- raster("Z:/andrep/Guatemala2/Outputs_real/2015/API_median.tif")
plot(r5)
plot(log(r5))
r6 <- raster("Z:/andrep/Guatemala2/Outputs_real/2016/API_median.tif")
r7 <- raster("Z:/andrep/Guatemala2/Outputs_real/2017/API_median.tif")
plot(log(r6))
plot(log(r7))
r <- raster("Z:/andrep/Guatemala2/Outputs_real/Summary/API_median.tif")
r <- raster("Z:/andrep/Guatemala2/Outputs_real/Summary/API_median.tif")
plot(r)
plot(log(r))
plot(log(r6))
plot(log(r5))
r <- raster("Z:/andrep/Guatemala2/Outputs_real/Summary/API_median.tif")
plot(log(r))
r <- raster("Z:/andrep/Guatemala2/Outputs_real/Summary/lower_0.01.tif")
plot(r)
plot(log(r))
plot(r)
r <- raster("Z:/andrep/Guatemala2/Outputs_real/Summary/upper_0.01.tif")
r <- raster("Z:/andrep/Guatemala2/Outputs_real/Summary/upper_5.tif")
plot(r)
?rbinom
source('~/hh.R')
ts.mat
source('~/hh.R')
ht
source('~/hh.R')
ht
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
ht
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
ts
ht
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
ht[, 1]
ht[, 1] / rowSums(ht)
ht[, 1]
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
5/1
5/18
13/36
13/35
13/32
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
2.5/6
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
5/12
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/hh.R')
source('~/ModelTest/carar1s.R')
fit.new
